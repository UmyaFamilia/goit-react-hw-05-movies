{"version":3,"file":"static/js/272.5ed43daf.chunk.js","mappings":"sMAKMA,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,4BAA4B,IAC9CC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAA+B,IA8E1D,UA7EmB,WAAO,IAADE,EACjBC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,MAAPD,GACNE,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACdI,GAAWC,EAAAA,EAAAA,SAAqB,QAAdZ,EAAAC,EAASY,aAAK,IAAAb,OAAA,EAAdA,EAAgBc,OAAQ,KAmBhD,OAjBAC,EAAAA,EAAAA,YAAU,WAENC,MAAM,sCAADC,OAAuCd,EAAE,mBAAmB,CAC/De,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAGHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAC,GAAQ,OAAIb,EAAQa,EAAS,IAClCE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GAGtC,GAAG,CAACvB,KAGF0B,EAAAA,EAAAA,KAAA,OAAAC,SACGrB,GACCsB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACED,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAIvB,EAASwB,QAAQL,UACzBD,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,kBAEVC,EAAAA,EAAAA,MAACK,EAAAA,GAAI,CAAAN,SAAA,EACHD,EAAAA,EAAAA,KAAA,OACEQ,IACE5B,EAAK6B,YAAW,mCAAArB,OACuBR,EAAK6B,aACxC,mEAENC,IAAK9B,EAAK+B,MACVC,MAAO,CACLC,MAAO,YAGXX,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,IAAErB,EAAKkC,mBACXZ,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,cAAYrB,EAAKmC,eACpBf,EAAAA,EAAAA,KAAA,MAAAC,SAAI,gBACJC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,IAAErB,EAAKoC,aACVhB,EAAAA,EAAAA,KAAA,MAAAC,SAAI,cACJC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,IAAErB,EAAKqC,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,KAAO,GAAG,cAG1ClB,EAAAA,EAAAA,MAACmB,EAAAA,GAAO,CAAApB,SAAA,EACND,EAAAA,EAAAA,KAAA,KAAAC,SAAG,4BACHC,EAAAA,EAAAA,MAAA,MAAIU,MAAO,CAAEU,cAAe,QAASrB,SAAA,EACnCD,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,OAAMJ,SAAC,YAElBD,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,UAASJ,SAAC,qBAIzBD,EAAAA,EAAAA,KAACuB,EAAAA,SAAQ,CAAAtB,UACPC,EAAAA,EAAAA,MAACsB,EAAAA,GAAM,CAAAvB,SAAA,EACLD,EAAAA,EAAAA,KAACyB,EAAAA,GAAK,CAACC,KAAK,OAAOC,SAAS3B,EAAAA,EAAAA,KAAChC,EAAI,OACjCgC,EAAAA,EAAAA,KAACyB,EAAAA,GAAK,CAACC,KAAK,UAAUC,SAAS3B,EAAAA,EAAAA,KAAC9B,EAAO,eAM7C8B,EAAAA,EAAAA,KAAA,OAAKQ,IAAI,sBAAsBE,IAAI,qBAI3C,C","sources":["pages/FilmDatail.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { lazy, Suspense } from 'react';\nimport { Link, useParams, Route, Routes, useLocation } from 'react-router-dom';\nimport { Post } from 'components/components';\nimport { Deteils } from 'components/components';\nconst Cast = lazy(() => import('../components/Cast'));\nconst Reviews = lazy(() => import('../components/Reviews'));\nconst FilmDatail = () => {\n  const location = useLocation();\n  let { id } = useParams();\n  const [film, setFilm] = useState(null);\n  const backLink = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    const request = () => {\n      fetch(`https://api.themoviedb.org/3/movie/${id}?language=en-US`, {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYzdiNDI4MzI0OGZjMzY2NWFmMWI1ODUzYTYzODBiNyIsInN1YiI6IjY1NDkxM2I2ZDU1YzNkMDEzOTIwMWI2OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.G9Kt9B3SjHXWQSy-TMwHC2FuMk_yb5YQt_GoSOYQB1E',\n        },\n      })\n        .then(response => response.json())\n        .then(response => setFilm(response))\n        .catch(err => console.error(err));\n    };\n    request();\n  }, [id]);\n\n  return (\n    <div>\n      {film ? (\n        <>\n          <Link to={backLink.current}>\n            <button>go to back</button>\n          </Link>\n          <Post>\n            <img\n              src={\n                film.poster_path\n                  ? `https://image.tmdb.org/t/p/w400/${film.poster_path}`\n                  : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image'\n              }\n              alt={film.title}\n              style={{\n                width: '400px',\n              }}\n            />\n            <div>\n              <h2> {film.original_title}</h2>\n              <p>popularity {film.popularity}</p>\n              <h4> Overviwe </h4>\n              <p> {film.overview}</p>\n              <h4> Genres </h4>\n              <p> {film.genres.map(a => a.name + ' ')}</p>\n            </div>\n          </Post>\n          <Deteils>\n            <p>Additional information</p>\n            <ul style={{ listStyleType: 'none' }}>\n              <li>\n                <Link to=\"cast\">cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n          </Deteils>\n          <Suspense>\n            <Routes>\n              <Route path=\"cast\" element={<Cast />} />\n              <Route path=\"reviews\" element={<Reviews />} />\n            </Routes>\n          </Suspense>\n        </>\n      ) : (\n        // eslint-disable-next-line jsx-a11y/img-redundant-alt\n        <img src=\"alternate_image_url\" alt=\"Alternate Image\" />\n      )}\n    </div>\n  );\n};\n\nexport default FilmDatail;\n"],"names":["Cast","lazy","Reviews","_location$state","location","useLocation","id","useParams","_useState","useState","_useState2","_slicedToArray","film","setFilm","backLink","useRef","state","from","useEffect","fetch","concat","method","headers","accept","Authorization","then","response","json","catch","err","console","error","_jsx","children","_jsxs","_Fragment","Link","to","current","Post","src","poster_path","alt","title","style","width","original_title","popularity","overview","genres","map","a","name","Deteils","listStyleType","Suspense","Routes","Route","path","element"],"sourceRoot":""}